// /* You can add global styles to this file, and also import other style files */

// $green: #32f9a5;
// $yellow: #ffd166;
// $pink: #ef476f;
// $blue: #118ab2;
// $input-grey: #a8a8a8;
// $min_width: 320px;
// $max_width: 1200px;
// $min_font: 18px;
// $max_font: 20px;

@import './utils.scss';

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

html {
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
}

@font-face {
  font-family: 'Segoe UI';
  src: url(assets/font/SEGOEUI.TTF) format('opentype');
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  font-family: 'Segoe UI', sans-serif;
}

button {
  border: 2px solid transparent;
  border-radius: 50px;
  padding: 0.6rem 3rem;
  color: #fff;
  font-size: 1.1rem;
  outline: none;
  cursor: pointer;
  font-weight: bold;
  font-family: 'Segoe UI', sans-serif;
  transition: 0.1s ease-in-out;
  transition-property: opacity, transform;
  margin: 10px;
}

button:hover {
  transform: scale(0.95);
  opacity: 0.95;
}
